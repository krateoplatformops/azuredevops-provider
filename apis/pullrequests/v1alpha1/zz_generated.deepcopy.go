//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright 2023 Kiratech SPA.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	"github.com/krateoplatformops/provider-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CompletionOptions) DeepCopyInto(out *CompletionOptions) {
	*out = *in
	if in.AutoCompleteIgnoreConfigIds != nil {
		in, out := &in.AutoCompleteIgnoreConfigIds, &out.AutoCompleteIgnoreConfigIds
		*out = make([]int, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CompletionOptions.
func (in *CompletionOptions) DeepCopy() *CompletionOptions {
	if in == nil {
		return nil
	}
	out := new(CompletionOptions)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GitCommitRef) DeepCopyInto(out *GitCommitRef) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GitCommitRef.
func (in *GitCommitRef) DeepCopy() *GitCommitRef {
	if in == nil {
		return nil
	}
	out := new(GitCommitRef)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GitProject) DeepCopyInto(out *GitProject) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GitProject.
func (in *GitProject) DeepCopy() *GitProject {
	if in == nil {
		return nil
	}
	out := new(GitProject)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GitPullRequest) DeepCopyInto(out *GitPullRequest) {
	*out = *in
	in.CompletionOptions.DeepCopyInto(&out.CompletionOptions)
	out.AutoCompleteSetBy = in.AutoCompleteSetBy
	out.ClosedBy = in.ClosedBy
	out.MergeOptions = in.MergeOptions
	out.Project = in.Project
	if in.Reviewers != nil {
		in, out := &in.Reviewers, &out.Reviewers
		*out = make([]IdentityRefWithVote, len(*in))
		copy(*out, *in)
	}
	out.LastMergeCommit = in.LastMergeCommit
	out.LastMergeSourceCommit = in.LastMergeSourceCommit
	out.LastMergeTargetCommit = in.LastMergeTargetCommit
	out.LastMerge = in.LastMerge
	out.CreatedBy = in.CreatedBy
	if in.WorkItemRefs != nil {
		in, out := &in.WorkItemRefs, &out.WorkItemRefs
		*out = make([]int, len(*in))
		copy(*out, *in)
	}
	if in.Labels != nil {
		in, out := &in.Labels, &out.Labels
		*out = make([]WebApiTagDefinition, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GitPullRequest.
func (in *GitPullRequest) DeepCopy() *GitPullRequest {
	if in == nil {
		return nil
	}
	out := new(GitPullRequest)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GitPullRequestMerge) DeepCopyInto(out *GitPullRequestMerge) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GitPullRequestMerge.
func (in *GitPullRequestMerge) DeepCopy() *GitPullRequestMerge {
	if in == nil {
		return nil
	}
	out := new(GitPullRequestMerge)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GitPullRequestMergeOptions) DeepCopyInto(out *GitPullRequestMergeOptions) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GitPullRequestMergeOptions.
func (in *GitPullRequestMergeOptions) DeepCopy() *GitPullRequestMergeOptions {
	if in == nil {
		return nil
	}
	out := new(GitPullRequestMergeOptions)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IdentityRef) DeepCopyInto(out *IdentityRef) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IdentityRef.
func (in *IdentityRef) DeepCopy() *IdentityRef {
	if in == nil {
		return nil
	}
	out := new(IdentityRef)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IdentityRefWithVote) DeepCopyInto(out *IdentityRefWithVote) {
	*out = *in
	out.IdentityRef = in.IdentityRef
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IdentityRefWithVote.
func (in *IdentityRefWithVote) DeepCopy() *IdentityRefWithVote {
	if in == nil {
		return nil
	}
	out := new(IdentityRefWithVote)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PullRequest) DeepCopyInto(out *PullRequest) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PullRequest.
func (in *PullRequest) DeepCopy() *PullRequest {
	if in == nil {
		return nil
	}
	out := new(PullRequest)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PullRequest) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PullRequestList) DeepCopyInto(out *PullRequestList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]PullRequest, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PullRequestList.
func (in *PullRequestList) DeepCopy() *PullRequestList {
	if in == nil {
		return nil
	}
	out := new(PullRequestList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PullRequestList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PullRequestSpec) DeepCopyInto(out *PullRequestSpec) {
	*out = *in
	out.ManagedSpec = in.ManagedSpec
	if in.ConnectorConfigRef != nil {
		in, out := &in.ConnectorConfigRef, &out.ConnectorConfigRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.ProjectRef != nil {
		in, out := &in.ProjectRef, &out.ProjectRef
		*out = new(v1.Reference)
		**out = **in
	}
	if in.RepositoryRef != nil {
		in, out := &in.RepositoryRef, &out.RepositoryRef
		*out = new(v1.Reference)
		**out = **in
	}
	in.PullRequest.DeepCopyInto(&out.PullRequest)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PullRequestSpec.
func (in *PullRequestSpec) DeepCopy() *PullRequestSpec {
	if in == nil {
		return nil
	}
	out := new(PullRequestSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PullRequestStatus) DeepCopyInto(out *PullRequestStatus) {
	*out = *in
	in.ManagedStatus.DeepCopyInto(&out.ManagedStatus)
	if in.Id != nil {
		in, out := &in.Id, &out.Id
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PullRequestStatus.
func (in *PullRequestStatus) DeepCopy() *PullRequestStatus {
	if in == nil {
		return nil
	}
	out := new(PullRequestStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TeamProjectReference) DeepCopyInto(out *TeamProjectReference) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TeamProjectReference.
func (in *TeamProjectReference) DeepCopy() *TeamProjectReference {
	if in == nil {
		return nil
	}
	out := new(TeamProjectReference)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *WebApiTagDefinition) DeepCopyInto(out *WebApiTagDefinition) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new WebApiTagDefinition.
func (in *WebApiTagDefinition) DeepCopy() *WebApiTagDefinition {
	if in == nil {
		return nil
	}
	out := new(WebApiTagDefinition)
	in.DeepCopyInto(out)
	return out
}
